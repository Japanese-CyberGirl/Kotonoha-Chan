from tkinter import *
from math import sqrt
x_koor = []
y_koor = []
counter = 0
points_counter = 0
line_counter = 0
lineline_counter = 0
tl = 0

def teget():
    global x
    global y
    global counter
    x_koor.append(int(x.get())+500)
    y_koor.append(400 - int(y.get()))
    counter = counter + 1

    x_label.config(text=x_koor)
    y_label.config(text=y_koor)
    z_label.config(text=counter)
    if counter > 0:
        canv.create_oval(x_koor[counter - 1] + 1, y_koor[counter - 1] - 1, x_koor[counter - 1] + 1, y_koor[counter - 1] - 1,
                         outline="black", fill="blue", width=2)
    line = canv.find_all()
    line_label.config(text=line)


def lining(): #функия нахождение длины линии и создание линейной последовательности линий между точками
    global lineline_counter
    global counter
    global tl
    global line
    global points_counter

    line = canv.find_all()
    if len(line) > 2 + counter:
        for i in range(2, len(line)):
            canv.delete(line[i])
        for points_counter in range(0, counter):
            canv.create_oval(x_koor[points_counter] + 1, y_koor[points_counter] - 1, x_koor[points_counter] + 1, y_koor[points_counter] - 1,
                             outline="black", fill="blue", width=2)

    for points_counter in range(0, counter-1):
        canv.create_line(x_koor[points_counter], y_koor[points_counter], x_koor[points_counter+1], y_koor[points_counter+1])
    canv.create_line(x_koor[counter-1], y_koor[counter-1], x_koor[0], y_koor[0])
    line = canv.find_all()
    lenline_label.config(text=tl)
    line_label.config(text=line)

def enter_koordinat():
    global x
    global y
    global counter

    children = Toplevel(root)
    children.title("Ввод координат")
    children.geometry("500x350")

    label1 = Label(children, text="Введите координаты")
    label1.pack()

    label2 = Label(children, text="Координата x")
    label2.pack()

    x = Entry(children)
    x.pack()

    label3 = Label(children, text="Координата y")
    label3.pack()

    y = Entry(children)
    y.pack()
    btn1 = Button(children, text="Принять", command=teget).place(x=250, y=130)

    btn2 = Button(children, text="Закрыть", command=children.destroy).place(x=420, y=300)


root = Tk()
root.geometry("800x650")
root.title("Основная программа")

canv = Canvas(root, width=1000, height=1000, bg="white")  # создаем оси графика координатной плоскости
canv.create_line(500, 1000, 500, 0, width=2, arrow=LAST)
canv.create_line(0, 400, 1000, 400, width=2, arrow=LAST)


#canv.create_line(z_koor[0] + 0.5, w_koor[0] - 0.5, z_koor[1] + 0.5, w_koor[1] - 0.5)

 # Параметрами метода create_line() являются координаты x и y, которые обозначают стартовые и конечные точки линии.

btn1 = Button(root, text="Ввод координат", command=enter_koordinat)
btn1.pack()



btn3 = Button(root, text="Линейное соединение массива", command=lining).place(x=30, y=130)



Label(root, text="x").place(x=5, y=10)
x_label = Label(root)
x_label.place(x=55, y=10)
x_label.config(text="")

Label(root, text="y").place(x=5, y=30)
y_label = Label(root)
y_label.place(x=55, y=30)
y_label.config(text="")

Label(root, text="counter").place(x=5, y=50)
z_label = Label(root)
z_label.place(x=55, y=50)
z_label.config(text="0")

Label(root, text="Длина линейной связи:").place(x=5,y=600)
lenline_label = Label(root)
lenline_label.place(x=155, y=600)
lenline_label.config(text=" ")

testline_label = Label(root,text="Длина тестовой линии: ").place(x=5,y=580)

Label(root,text="Количество элементов ").place(x=5,y=560)
line_label = Label(root)
line_label.place(x=155, y=560)
line_label.config(text="0")


quitButton = Button(root, text="Закрыть окно", command=quit)
quitButton.place(x=1200, y=0)
canv.pack()
root.mainloop()
