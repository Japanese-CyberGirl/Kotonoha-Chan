from tkinter import *

x_koor = []
y_koor = []
counter = 0


def teget():
    global x
    global x_label
    global counter
    x_koor.append(x.get())
    x_label = Label(root, text=x_koor).place(x=55, y=10)
    global y
    global y_label
    global z_label
    y_koor.append(y.get())
    global counter
    counter = counter + 1
    y_label = Label(root, text=y_koor).place(x=55, y=30)
    z_label = Label(root, text=counter).place(x=55, y=50)


    if counter > 0:
        canv.create_oval(int(x_koor[int(counter) - 1]) + 1 + 500, 400 - int(y_koor[int(counter) - 1]) - 1,
                         int(x_koor[int(counter) - 1]) + 1 + 500, 400 - int(y_koor[int(counter) - 1]) - 1,
                         outline="black", fill="blue", width=2)


def test_lining():
    canv.create_line(z_koor[0] + 0.5, w_koor[0] - 0.5, z_koor[1] + 0.5, w_koor[1] - 0.5)
    global testline_label
    global tll
    tll = int (((z_koor[0]-z_koor[1])*(z_koor[0]-z_koor[1])) + ((w_koor[0]-w_koor[1])*(w_koor[0]-w_koor[1])))
    testline_label = Label(root,text=tll).place(x=155, y=580)

def lining():
    global lenline_label

    global tl
    if counter>1:
        canv.create_line(int(x_koor[0]) + 500 + 0.5, 400 - int(y_koor[0]) - 0.5,
                         int(x_koor[1])+500 + 0.5, 400 - int(y_koor[1]) - 0.5)
        tl = int(((int(x_koor[0]) - int(x_koor[1])) * (int(x_koor[0]) - int(x_koor[1]))) + ((int(y_koor[0]) - int(y_koor[1])) * (int(y_koor[0]) - int(y_koor[1]))))
        testline_label = Label(root, text=tl).place(x=155, y=600)


def enter_koordinat():
    global x
    global y
    global counter
    children = Toplevel(root)
    children.title("Ввод координат")
    children.geometry("500x350")

    label1 = Label(children, text="Введите координаты")
    label1.pack()

    label2 = Label(children, text="Координата x")
    label2.pack()

    x = Entry(children)
    x.pack()

    label3 = Label(children, text="Координата y")
    label3.pack()

    y = Entry(children)
    y.pack()
    btn1 = Button(children, text="Принять", command=teget).place(x=250, y=130)

    btn2 = Button(children, text="Закрыть", command=children.destroy).place(x=420, y=300)


root = Tk()
root.geometry("800x650")
root.title("Основная программа")

canv = Canvas(root, width=1000, height=1000, bg="white")  # создаем оси графика координатной плоскости
canv.create_line(500, 1000, 500, 0, width=2, arrow=LAST)
canv.create_line(0, 400, 1000, 400, width=2, arrow=LAST)
z_koor = [100, 150]
w_koor = [100,50]

canv.create_oval(z_koor[0] + 1, w_koor[0] - 1, z_koor[0] + 1, w_koor[0] - 1, outline="black", fill="blue",
                 width=2)  # создание тестовой точки координат

canv.create_oval(z_koor[1] + 1, w_koor[1] - 1, z_koor[1] + 1, w_koor[1] - 1, outline="black", fill="blue",
                 width=2)  # создание второй тестовой точки координат

#canv.create_line(z_koor[0] + 0.5, w_koor[0] - 0.5, z_koor[1] + 0.5, w_koor[1] - 0.5)

 # Параметрами метода create_line() являются координаты x и y, которые обозначают стартовые и конечные точки линии.

btn1 = Button(root, text="Ввод координат", command=enter_koordinat)
btn1.pack()

btn2 = Button(root, text="Тестовая Линия", command=test_lining).place(x=30, y=100)

btn3 = Button(root, text="Линейное соединение массива", command=lining).place(x=30, y=130)



global x_label
x_label = Label(root, text="x").place(x=25, y=10)
global y_label
y_label = Label(root, text="y").place(x=25, y=30)
global z_label
z_label = Label(root, text="counter").place(x=5, y=50)
global lenline_label
lenline_label = Label(root, text="Длина линейной связи:").place(x=5, y=600)
global testline_label
testline_label = Label(root,text="Длина тестовой линии: ").place(x=5,y=580)

quitButton = Button(root, text="Закрыть окно", command=quit)
quitButton.place(x=1200, y=0)
canv.pack()
root.mainloop()
